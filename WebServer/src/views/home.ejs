<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('layouts/head.ejs') %>

        <!-- Leaflet.js cdn -->
        <link
            rel="stylesheet"
            href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
            integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
            crossorigin=""
        />
        <script
            src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""
        ></script>
    </head>
    <body>
        <div class="background">
            <!-- Navbar -->
            <div class="container home">
                <nav class="navbar navbar-light">
                    <div class="container-fluid">
                        <a class="navbar-brand d-flex align-items-center" href="#">
                            <img
                                src="https://www.uit.edu.vn/sites/vi/files/uploads/images/thumbs/202111/phong.png"
                                alt=""
                                width="40"
                                height="40"
                                class="d-inline-block align-text-top rounded-circle"
                            />
                            <span class="ms-3">Smart Parking System</span>
                        </a>

                        <span class="balance"></span>

                        <span>Welcome <%= sessionInfo.username %>!</span>

                        <a href="/logout" style="color: #fff">Logout</a>
                    </div>
                </nav>
            </div>

            <!-- Slot status -->
            <div class="container mb-4">
                <h2>Slot status</h2>
                <h3>Availability: <span class="slot__availability"></span></h3>
                <div class="slot__container">
                    <div class="row"></div>
                </div>
            </div>

            <!-- Your booking -->
            <div class="container">
                <h2>Your booking</h2>
                <div class="booking__container">
                    <!-- Booking button -->
                    <button
                        type="button"
                        class="btn btn-success booking-request__btn"
                        onclick="bookingRequest();"
                        hidden
                    >
                        Book
                    </button>
                    <button type="button" class="btn btn-danger cancel-booking__btn" onclick="cancelBooking();" hidden>
                        Cancel Booking
                    </button>
                    <!-- Button trigger modal QR Code-->
                    <button
                        type="button"
                        class="btn btn-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#exampleModal"
                        onclick="getQRCode();"
                    >
                        QR Code
                    </button>
                </div>
            </div>

            <!-- <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <strong>Holy guacamole!</strong> You should check in on some of those fields below.
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div> -->
            
            <div class="container">
                <div id="map"></div>
            </div>

            <!-- Modal -->
            <div
                class="modal fade"
                id="exampleModal"
                tabindex="-1"
                aria-labelledby="exampleModalLabel"
                aria-hidden="true"
            >
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Your QR Code</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body qr__container"></div>
                    </div>
                </div>
            </div>
        </div>

        <script src="main.js"></script>

        <script src="/socket.io/socket.io.js"></script>
        <script>
            const renderSlotStatus = (slotStatus) => {
                const slotAvailability = document.querySelector('.slot__availability');
                const slotContainer = document.querySelector('.slot__container .row');

                // Show slot status
                var htmls = slotStatus.slotList.map(function (slot) {
                    let BgColor = '';
                    if (!slot.isBlank) {
                        BgColor = 'bg-danger';
                    } else {
                        BgColor = 'bg-success';
                    }

                    return `<div class="slot__item col-4 ${BgColor}" dataId="${slot.slotNumber}">

                                <b>Slot ${slot.slotNumber}</b>
                            </div>`;
                });

                slotContainer.innerHTML = htmls.join('');

                const slotBtns = document.querySelectorAll('.slot__container .slot__item');

                // Show slot availability
                slotAvailability.innerHTML = `${slotStatus.availability}/${slotStatus.slotList.length}`;
            };

            const fetchSlotStatus = async () => {
                await fetch(`<%= url %>:<%= port %>/iot/`)
                    .then((resoponse) => {
                        return resoponse.json();
                    })
                    .then((slotStatus) => {
                        renderSlotStatus(slotStatus);
                    });
            };

            const getQRCode = async () => {
                await fetch(`<%= url %>:<%= port %>/qrcode/`)
                    .then((resoponse) => {
                        return resoponse.json();
                    })
                    .then(async (qrString) => {
                        console.log('qrString:', qrString);
                        const qrContainer = document.querySelector('.qr__container');
                        if (qrString) {
                            qrContainer.innerHTML = `<img src="${qrString}"/>`;
                        } else {
                            qrContainer.innerHTML = `<h2>You haven't book slot</h2>`;
                        }
                    });
            };

            const bookingRequest = async () => {
                await fetch(`<%= url %>:<%= port %>/booking/create`)
                    .then((resoponse) => {
                        return resoponse.json();
                    })
                    .then((data) => {});

                await bookingStatus();
            };

            const cancelBooking = async () => {
                await fetch(`<%= url %>:<%= port %>/booking/cancel`)
                    .then((resoponse) => {
                        return resoponse.json();
                    })
                    .then((data) => {});

                await bookingStatus();
                await getbalance();
            };

            const bookingStatus = async () => {
                await fetch(`<%= url %>:<%= port %>/booking/status`)
                    .then((resoponse) => {
                        return resoponse.json();
                    })
                    .then(async (isParking) => {
                        if (isParking) {
                            document.querySelector('.cancel-booking__btn').hidden = false;
                            document.querySelector('.booking-request__btn').hidden = true;
                        } else {
                            document.querySelector('.booking-request__btn').hidden = false;
                            document.querySelector('.cancel-booking__btn').hidden = true;
                        }
                    });
            };

            const getbalance = async () => {
                await fetch(`<%= url %>:<%= port %>/balance`)
                    .then((resoponse) => {
                        return resoponse.json();
                    })
                    .then(async (balance) => {
                        document.querySelector('.balance').innerHTML = `Balance: ${balance}`;
                    });
            };

            window.addEventListener('load', async () => {
                // ####### Slot status #######
                await fetchSlotStatus();

                await bookingStatus();

                await getbalance();

                // Socket.io
                const socket = io();

                socket.on('fetch slot data', async (message) => {
                    console.log(message);
                    await fetchSlotStatus();
                });
            });
        </script>
    </body>
</html>
